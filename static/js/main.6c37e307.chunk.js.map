{"version":3,"sources":["components/table.js","components/App.js","index.js"],"names":["Tables","this","props","name","newCases","critical","active","recovered","new","deathTotal","casesTotal","testTotal","React","Component","App","state","error","isLoaded","countries","axios","process","REACT_APP_API_KEY","then","response","setState","data","console","log","catch","className","map","country","key","cases","deaths","total","tests","ReactDOM","render","document","querySelector"],"mappings":"8QAIqBA,G,6KAEb,OACA,kBAAC,QAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,KAAKC,KAAKC,MAAMC,MAChB,kBAAC,KAAD,KAAKF,KAAKC,MAAME,UAChB,kBAAC,KAAD,KAAKH,KAAKC,MAAMG,UAChB,kBAAC,KAAD,KAAKJ,KAAKC,MAAMI,QAChB,kBAAC,KAAD,KAAKL,KAAKC,MAAMK,WAChB,kBAAC,KAAD,KAAKN,KAAKC,MAAMM,KAChB,kBAAC,KAAD,KAAKP,KAAKC,MAAMO,YAChB,kBAAC,KAAD,KAAKR,KAAKC,MAAMQ,YAChB,kBAAC,KAAD,KAAKT,KAAKC,MAAMS,iB,GAbIC,IAAMC,YCiF3BC,G,wDA7EZ,aAAc,IAAD,8BACZ,gBACKC,MAAO,CACVC,MAAO,KACPC,UAAU,EACVC,UAAW,MALD,E,gEASO,IAAD,OAChBC,IAAM,CACJ,OAAS,MACT,IAAM,8CACN,QAAU,CACV,eAAe,2BACf,kBAAkB,2BAClB,iBAAiB,GAAjB,OAAqBC,iIAAYC,mBACjC,gBAAkB,KAGjBC,MAAK,SAACC,GACL,EAAKC,SAAS,CAAEN,UAAWK,EAASE,KAAKF,SAAUN,UAAU,IAC7DS,QAAQC,KAAK,EAAKZ,MAAMG,WACxBQ,QAAQC,IAAI,EAAKZ,MAAME,aAExBW,OAAM,SAACZ,GACNU,QAAQC,IAAIX,Q,+BAMd,OACE,+BAAWa,UAAU,4BACnB,gDACA,gKACA,mGACC5B,KAAKc,MAAME,WAAahB,KAAKc,MAAMG,UAClC,uBAAGW,UAAU,WAAb,cAEF,kBAAC,QAAD,CAAOA,UAAU,wBACf,kBAAC,QAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,gBACA,kBAAC,KAAD,kBACA,kBAAC,KAAD,eACA,kBAAC,KAAD,iBACA,kBAAC,KAAD,kBACA,kBAAC,KAAD,mBACA,kBAAC,KAAD,qBACA,kBAAC,KAAD,oBACA,kBAAC,KAAD,sBAGP5B,KAAKc,MAAMG,UAAUY,KAAI,SAAAC,GAC1B,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAQA,QACb5B,KAAM4B,EAAQA,QACd3B,SAAU2B,EAAQE,MAAMzB,IACxBF,OAAQyB,EAAQE,MAAM3B,OACtBD,SAAU0B,EAAQE,MAAM5B,SACxBE,UAAWwB,EAAQE,MAAM1B,UACzBC,IAAKuB,EAAQG,OAAO1B,IACpBC,WAAYsB,EAAQG,OAAOC,MAC3BzB,WAAYqB,EAAQE,MAAME,MAC1BxB,UAAWoB,EAAQK,MAAMD,iB,GAnEzBvB,IAAMC,YCHxBwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.6c37e307.chunk.js","sourcesContent":["import React from 'react';\nimport { Tbody, Tr, Td } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\n\nexport default class Tables extends React.Component {   \n    render() {\n        return (\n        <Tbody> \n            <Tr>\n                <Td>{this.props.name}</Td>\n                <Td>{this.props.newCases}</Td>\n                <Td>{this.props.critical}</Td>\n                <Td>{this.props.active}</Td>\n                <Td>{this.props.recovered}</Td>\n                <Td>{this.props.new}</Td>\n                <Td>{this.props.deathTotal}</Td>\n                <Td>{this.props.casesTotal}</Td>\n                <Td>{this.props.testTotal}</Td>\n            </Tr>\n        </Tbody> \n        )\n    }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { Table, Thead, Tr, Th } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport Tables from '../components/table';\nimport './App.css';\n\nclass App extends React.Component {\n   constructor(){\n    super();\n    this.state= {\n      error: null,\n      isLoaded: true,\n      countries: null\n    };\n  }  \n  \n  componentDidMount() {\n      axios({\n        \"method\":\"GET\",\n        \"url\":\"https://covid-193.p.rapidapi.com/statistics\",\n        \"headers\":{\n        \"content-type\":\"application/octet-stream\",\n        \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n        \"useQueryString\": true\n        }\n        })\n        .then((response) => {\n          this.setState({ countries: response.data.response, isLoaded: false});\n          console.log(!this.state.countries);\n          console.log(this.state.isLoaded); \n        })\n        .catch((error)=>{\n          console.log(error)\n        })\n      }\n  \n    \n    render() {\n        return (\n          <container className=\"ui center aligned header\">\n            <h1>Covid-19 Tracker</h1>\n            <p>Welcome to the Covid-19 Tracker. A simple and straight forward tracker that pulls the latest updates of recent cases around world. \n            <p>Boxes that are not filled in yet have not reported any new updates.</p></p> \n            {this.state.isLoaded || !this.state.countries ? (\n              <p className=\"loading\">Loading...</p>\n             ) : (\n            <Table className=\"ui single line table\"> \n              <Thead>\n                  <Tr>\n                      <Th>Country</Th>\n                      <Th>New Cases</Th>\n                      <Th>Active</Th>\n                      <Th>Critical</Th>\n                      <Th>Recovered</Th>\n                      <Th>New Deaths</Th>\n                      <Th>Total Deaths</Th>\n                      <Th>Total Cases</Th>\n                      <Th>Total Tests</Th>\n                  </Tr>\n              </Thead>\n              {this.state.countries.map(country => {\n              return (\n                <Tables \n                  key={country.country}\n                  name={country.country}\n                  newCases={country.cases.new}\n                  active={country.cases.active}\n                  critical={country.cases.critical}\n                  recovered={country.cases.recovered}\n                  new={country.deaths.new}\n                  deathTotal={country.deaths.total}\n                  casesTotal={country.cases.total}\n                  testTotal={country.tests.total}\n                />\n                )})}\n              </Table> \n              )}\n          </container>\n        )\n    }\n}\n        \n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}